{"version":3,"sources":["reducers/auth.js","reducers/message.js","reducers/index.js","actions/types.js","store.js","services/auth.service.js","components/Login.js","actions/auth.js","components/Register.js","services/auth-header.js","services/user.service.js","components/Home.js","components/Profile.js","components/BoardUser.js","components/BoardModerator.js","components/BoardAdmin.js","helpers/history.js","App.js","actions/message.js","serviceWorker.js","index.js"],"names":["user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","combineReducers","auth","state","action","type","payload","message","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","API_URL","username","email","password","axios","post","then","response","data","accessToken","setItem","stringify","removeItem","required","value","className","role","Login","props","form","useRef","checkBtn","useState","setUsername","setPassword","loading","setLoading","useSelector","dispatch","useDispatch","to","src","alt","onSubmit","e","preventDefault","current","validateAll","context","_errors","length","AuthService","Promise","resolve","error","toString","reject","login","history","push","window","location","reload","catch","ref","htmlFor","name","onChange","target","validations","disabled","style","display","validEmail","isEmail","vusername","vpassword","Register","setEmail","successful","setSuccessful","register","authHeader","get","headers","Home","content","setContent","useEffect","UserService","_content","Profile","currentUser","substring","substr","id","roles","map","index","key","BoardUser","BoardModerator","BoardAdmin","createBrowserHistory","App","showModeratorBoard","setShowModeratorBoard","showAdminBoard","setShowAdminBoard","listen","includes","href","onClick","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.11994ddf.chunk.js","sourcesContent":["import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../actions/types\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: payload.user,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport message from \"./message\";\n\nexport default combineReducers({\n  auth,\n  message,\n});\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import axios from \"axios\";\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nconst register = (username, email, password) => {\n  return axios.post(API_URL + \"signup\", {\n    username,\n    email,\n    password,\n  });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(API_URL + \"signin\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nexport default {\n  register,\n  login,\n  logout,\n};\n","import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport { login } from \"../actions/auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst Login = (props) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const { isLoggedIn } = useSelector(state => state.auth);\n  const { message } = useSelector(state => state.message);\n\n  const dispatch = useDispatch();\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      dispatch(login(username, password))\n        .then(() => {\n          props.history.push(\"/profile\");\n          window.location.reload();\n        })\n        .catch(() => {\n          setLoading(false);\n        });\n    } else {\n      setLoading(false);\n    }\n  };\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/profile\" />;\n  }\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form onSubmit={handleLogin} ref={form}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <Input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"username\"\n              value={username}\n              onChange={onChangeUsername}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <Input\n              type=\"password\"\n              className=\"form-control\"\n              name=\"password\"\n              value={password}\n              onChange={onChangePassword}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\n              {loading && (\n                <span className=\"spinner-border spinner-border-sm\"></span>\n              )}\n              <span>Login</span>\n            </button>\n          </div>\n\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_MESSAGE,\n} from \"./types\";\n\nimport AuthService from \"../services/auth.service\";\n\nexport const register = (username, email, password) => (dispatch) => {\n  return AuthService.register(username, email, password).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const login = (username, password) => (dispatch) => {\n  return AuthService.login(username, password).then(\n    (data) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: { user: data },\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const logout = () => (dispatch) => {\n  AuthService.logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport { register } from \"../actions/auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst validEmail = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nconst Register = () => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n\n  const { message } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangeEmail = (e) => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    setSuccessful(false);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      dispatch(register(username, email, password))\n        .then(() => {\n          setSuccessful(true);\n        })\n        .catch(() => {\n          setSuccessful(false);\n        });\n    }\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form onSubmit={handleRegister} ref={form}>\n          {!successful && (\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={username}\n                  onChange={onChangeUsername}\n                  validations={[required, vusername]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChangeEmail}\n                  validations={[required, validEmail]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChangePassword}\n                  validations={[required, vpassword]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button className=\"btn btn-primary btn-block\">Sign Up</button>\n              </div>\n            </div>\n          )}\n\n          {message && (\n            <div className=\"form-group\">\n              <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user && user.accessToken) {\n    // For Spring Boot back-end\n    // return { Authorization: \"Bearer \" + user.accessToken };\n\n    // for Node.js Express back-end\n    return { \"x-access-token\": user.accessToken };\n  } else {\n    return {};\n  }\n}\n","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://localhost:8080/api/test/\";\n\nconst getPublicContent = () => {\n  return axios.get(API_URL + \"all\");\n};\n\nconst getUserBoard = () => {\n  return axios.get(API_URL + \"user\", { headers: authHeader() });\n};\n\nconst getModeratorBoard = () => {\n  return axios.get(API_URL + \"mod\", { headers: authHeader() });\n};\n\nconst getAdminBoard = () => {\n  return axios.get(API_URL + \"admin\", { headers: authHeader() });\n};\n\nexport default {\n  getPublicContent,\n  getUserBoard,\n  getModeratorBoard,\n  getAdminBoard,\n};","import React, { useState, useEffect } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nconst Home = () => {\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    UserService.getPublicContent().then(\n      (response) => {\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response && error.response.data) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>{content}</h3>\n      </header>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nconst Profile = () => {\n  const { user: currentUser } = useSelector((state) => state.auth);\n\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>\n          <strong>{currentUser.username}</strong> Profile\n        </h3>\n      </header>\n      <p>\n        <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n        {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n      </p>\n      <p>\n        <strong>Id:</strong> {currentUser.id}\n      </p>\n      <p>\n        <strong>Email:</strong> {currentUser.email}\n      </p>\n      <strong>Authorities:</strong>\n      <ul>\n        {currentUser.roles &&\n          currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n      </ul>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nconst BoardUser = () => {\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    UserService.getUserBoard().then(\n      (response) => {\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>{content}</h3>\n      </header>\n    </div>\n  );\n};\n\nexport default BoardUser;\n","import React, { useState, useEffect } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nconst BoardModerator = () => {\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    UserService.getModeratorBoard().then(\n      (response) => {\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>{content}</h3>\n      </header>\n    </div>\n  );\n};\n\nexport default BoardModerator;\n","import React, { useState, useEffect } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nconst BoardAdmin = () => {\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    UserService.getAdminBoard().then(\n      (response) => {\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>{content}</h3>\n      </header>\n    </div>\n  );\n};\n\nexport default BoardAdmin;\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/Profile\";\nimport BoardUser from \"./components/BoardUser\";\nimport BoardModerator from \"./components/BoardModerator\";\nimport BoardAdmin from \"./components/BoardAdmin\";\n\nimport { logout } from \"./actions/auth\";\nimport { clearMessage } from \"./actions/message\";\n\nimport { history } from \"./helpers/history\";\n\nconst App = () => {\n  const [showModeratorBoard, setShowModeratorBoard] = useState(false);\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\n\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    history.listen((location) => {\n      dispatch(clearMessage()); // clear message when changing location\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (currentUser) {\n      setShowModeratorBoard(currentUser.roles.includes(\"ROLE_MODERATOR\"));\n      setShowAdminBoard(currentUser.roles.includes(\"ROLE_ADMIN\"));\n    }\n  }, [currentUser]);\n\n  const logOut = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <Router history={history}>\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            bezKoder\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n\n            {showModeratorBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/mod\"} className=\"nav-link\">\n                  Moderator Board\n                </Link>\n              </li>\n            )}\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  Admin Board\n                </Link>\n              </li>\n            )}\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/user\"} className=\"nav-link\">\n                  User\n                </Link>\n              </li>\n            )}\n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Sign Up\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/user\" component={BoardUser} />\n            <Route path=\"/mod\" component={BoardModerator} />\n            <Route path=\"/admin\" component={BoardAdmin} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\n\nexport const setMessage = (message) => ({\n  type: SET_MESSAGE,\n  payload: message,\n});\n\nexport const clearMessage = () => ({\n  type: CLEAR_MESSAGE,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can chađinge\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}